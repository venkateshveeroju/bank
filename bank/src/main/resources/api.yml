openapi: 3.0.3
info:
  title: Banking API Specification for account operations
  description: |-
    A simple banking API that allows two operations:
    - API to open an account with the option to add initial credit.
    - API to retrieve account information including account balance.
    - API to retrieve person information.
    - API to make a transfer from one account to another.

  version: 1.0-SNAPSHOT
servers:
  - url: https://localhost:/api
tags:
  - name: accounts
    description: Operations between bank accounts
paths:
  /accounts:
    post:
      tags:
        - Account
      summary: Create an account
      description: Create an account with an option to deposit initial amount
      operationId: accountId
      requestBody:
        description: User Details and Desired amount to deposit
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccount'
      responses:
        200:
          description: Success.OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreated'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundError'
  /accounts/{accountNumber}/balance:
    get:
      tags:
        - Account
      summary: Get account balance
      description: Get account information using account number
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Account Balance Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountM'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundError'
  /accounts/deposit:
    post:
      tags:
        - Account
      summary: Deposit amount to account
      description: Initiates a deposit operation of a desired amount to the account specified
      operationId: depositToAccount
      requestBody:
        description: Account number and desired amount to deposit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositRequest'
        required: true
      responses:
        204:
          description: Success
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundError'
  /User/{accountNumber}:
    get:
      tags:
        - User
      summary: Retrieves Person information
      description: Retrieves Person information using User id.
      operationId: UserId
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string

      responses:
        200:
          description: Person Infromation Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundError'
        401:
          description: Authorization information is missing or invalid.
        503:
          description: Unexpected error.
  /transfer:
    get:
      tags:
        - Account
      summary: Makes transfer between Accounts
      description: Makes transfer between Accounts
      operationId: transferId
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string

      responses:
        200:
          description: Person Infromation Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundError'
        401:
          description: Authorization information is missing or invalid.
        503:
          description: Unexpected error.
components:
  securitySchemes:
    oAuthSample:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        implicit:
          authorizationUrl: https://api.example.com/oauth2/authorize
          scopes:
            read_pets: read your pets
            write_pets: modify pets in your account
  schemas:
    NewAccount:
      type: object
      required:
        - name
        - email
        - password
        - street
        - city
        - state
        - country
        - postalCode
      properties:
        User:
          $ref: '#/components/schemas/UserM'


    AddressM:
      type: object
      properties:
        street:
          type: string
          example: 'street name'
        city:
          type: string
          example: 'city name'
        state:
          type: string
          example: 'state name'
        country:
          type: string
          example: 'country name'
        postalCode:
          type: string
          example: '501510'


    UserM:
      type: object
      properties:
        name:
          type: string
          example: 'fullName'
        email:
          type: string
          format: email
          example: 'maxmuller@gmail.com'
        password:
          type: string
          example: "max234"
        roles:
          type: array
          items:
            type: String

        address:
          $ref: '#/components/schemas/AddressM'
        account:
          $ref: '#/components/schemas/AccountM'

    UserInfo:
      type: object
      properties:
        name:
          type: string
          example: 'Full Name'
        email:
          type: string
          format: email
          example: 'maxmuller@gmail.com'
        address:
          $ref: '#/components/schemas/AddressM'


    UserCreated:
      type: object
      properties:

        accountNumber:
          type: string
          example: 'A1234'
        balance:
          type: number
          example: 5000.00
        status:
          type: string
        createdTimeStamp:
          type: string
          format: date # or date-time
        UpdatedTimeStamp:
          type: string
          format: date # or date-time

    TransactionM:
      type: object
      required:
        - id
        - senderAccount
        - receiverAccount
        - transferAmount
      properties:
        id:
          type: string
          example: 'A1234'
        senderAccount:
          type: string
          example: 'C1234'
        receiverAccount:
          type: string
          example: 'C1234'
        transferAmount:
          type: number
          example: 1000.00
        type:
          type: string
          enum: [deposit, withdrawal]
          example: deposit

    AccountM:
      type: object
      properties:
        accountNumber:
          type: string
          example: 'A1234'
        balance:
          type: number
          example: 5000.00
        status:
          type: string
        createdTimeStamp:
          type: string
          format: date # or date-time
        UpdatedTimeStamp:
          type: string
          format: date # or date-time

    AccountNotFoundError:
      type: object
      properties:
        message:
          type: string
    DepositRequest:
      type: object
      properties:
        accountNumber:
          type: string
        depositAmount:
          type: number