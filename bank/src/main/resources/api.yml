openapi: 3.0.3
info:
  title: Banking API Specification for account operations
  description: |-
    A simple banking API that allows two operations:
    - get account balance given account number
    - deposit amount to a account
  version: 1.0-SNAPSHOT
servers:
  - url: https://localhost:/api/v1
tags:
  - name: accounts
    description: Operations between bank accounts
paths:
  /accounts:
    post:
      tags:
        - Account
      summary: Create an account
      description: Create an account with an option to deposit initial amount
      operationId: accountId
      requestBody:
        description: Customer Details and Desired amount to deposit
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccount'
      responses:
        200:
          description: Success.OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCreated'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundError'
  /accounts/{accountId}/balance:
    get:
      tags:
        - Account
      summary: Get account balance
      description: Get account information using account number
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Account Balance Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountM'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundError'
  /accounts/deposit:
    post:
      tags:
        - Account
      summary: Deposit amount to account
      description: Initiates a deposit operation of a desired amount to the account specified
      operationId: depositToAccount
      requestBody:
        description: Account number and desired amount to deposit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositRequest'
        required: true
      responses:
        204:
          description: Success
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundError'
  /customer/{customerId}:
    get:
      tags:
        - Customer
      summary: Retrieves Person information
      description: Retrieves Person information using customer id.
      operationId: customerId
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer

      responses:
        200:
          description: Person Infromation Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerM'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundError'
        401:
          description: Authorization information is missing or invalid.
        503:
          description: Unexpected error.
components:
  securitySchemes:
    oAuthSample:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)
      flows:
        implicit:
          authorizationUrl: https://api.example.com/oauth2/authorize
          scopes:
            read_pets: read your pets
            write_pets: modify pets in your account
  schemas:
    NewAccount:
      type: object
      required:
        - firstName
        - lastName
        - email
        - password
        - dob
        - street
        - city
        - state
        - country
        - postalCode
      properties:
        customer:
          $ref: '#/components/schemas/CustomerM'
        address:
          $ref: '#/components/schemas/AddressM'

    AddressM:
      type: object
      properties:
        street:
          type: string
          example: 'street name'
        city:
          type: string
          example: 'city name'
        state:
          type: string
          example: 'state name'
        country:
          type: string
          example: 'country name'
        postalCode:
          type: string
          example: '501510'


    CustomerM:
      type: object
      properties:
        firstName:
          type: string
          example: 'firstName'
        lastName:
          type: string
          example: 'lastName'
        balance:
          type: number
          description: Available balance
        email:
          type: string
          format: email
          example: 'abchfg@efg.com'
        dob:
          type: string
          example: '12.23.2000'
        password:
          type: string
          example: "abcd1234"

    CustomerCreated:
      type: string
      example: 'Account already exists : Viktor1234'




    TransactionM:
      type: object
      required:
        - id
        - accountId
        - amount
        - type
      properties:
        id:
          type: string
          example: 'A1234'
        accountNumber:
          type: string
          example: 'C1234'
        amount:
          type: number
          example: 1000.00
        type:
          type: string
          enum: [deposit, withdrawal]
          example: deposit
    AccountM:
      type: object
      properties:
        accountId:
          type: string
          example: 'A1234'
        customerName:
          type: string
          example: 'firstname lastname'
        accountBalance:
          type: number
          example: 5000.00
        status:
          type: string
        customer:
          $ref: '#/components/schemas/CustomerM'
        address:
          $ref: '#/components/schemas/AddressM'
        dateCreated:
          type: string
          format: date # or date-time
        lastActivity:
          type: string
          format: date # or date-time

    AccountNotFoundError:
      type: object
      properties:
        message:
          type: string

    DepositRequest:
      type: object
      properties:
        accountNumber:
          type: string
        depositAmount:
          type: number